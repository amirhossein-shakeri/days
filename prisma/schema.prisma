datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String  @id @default(cuid())
  email String  @unique
  name  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  Record   Record[]
  Tag      Tag[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

// model Note {
//   id    String @id @default(cuid())
//   title String
//   body  String

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
//   userId String
// }

model Record {
  id          String    @id @default(cuid())
  title       String
  type        String    @default("HAPPENED")
  // type        RecordType @default(HAPPENED)
  start       DateTime?
  end         DateTime?
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  tags        Tag[]
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  day         Day?      @relation(name: "records", fields: [dayId], references: [id])
  dayId       String?
  // tags        Tag[]      @relation(fields: [tagIDs], references: [id])
  // tagIDs      String[]
}

model Tag {
  id          String   @id @default(cuid())
  title       String
  description String?
  styles      String?
  records     Record[]
  user        User?    @relation(fields: [userId], references: [id])
  userId      String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  // styles      Style?
  // Record      Record?  @relation(fields: [recordId], references: [id])
  // recordId    String?
  // records     Record[] @relation(fields: [recordIDs], references: [id])
  // recordIDs   String[]
}

// type Style {
//   bg     String?
//   color  String?
//   border String?
//   shadow String?
// }

model Day {
  id      String   @id @default(cuid())
  date    DateTime @default(now())
  records Record[] @relation(name: "records") // happened & planned
  note    String? // journey & journaling
}

//? Enums are not supported by sqlite 
// enum RecordType {
//   HAPPENED
//   PLANNED
// }
